import { Oswald, Raleway, Rubik } from 'next/font/google';
import clsx from 'clsx';
import initTranslations from '@/i18n/utils/i18n';
import TranslationsProvider from '@/i18n/utils/TranslationsProvider';
import ErrorBoundaryWithTranslation from '@/shared/components/ErrorBoundary/ErrorBoundaryWithTranslation/ErrorBoundaryWithTranslation';
import { Header } from '../../modules/Header/Header';
import { NAMESPACES } from '@/shared/constants';
import i18nConfig from '../../../i18nConfig';

import '../globals.scss';

const oswald = Oswald({
  subsets: ['latin', 'cyrillic'],
  weight: ['400'],
  display: 'swap',
  variable: '--font-oswald',
});

const raleway = Raleway({
  subsets: ['latin', 'cyrillic'],
  weight: ['600'],
  display: 'swap',
  variable: '--font-raleway',
});

const rubik = Rubik({
  subsets: ['latin', 'cyrillic'],
  weight: ['400'],
  display: 'swap',
  variable: '--font-rubik',
});

export const metadata = {
  title: 'web studio',
  description: 'Generated by create next app',
};

export function generateStaticParams() {
  return i18nConfig.locales.map((locale) => ({ locale }));
}

export default async function Layout({ children, params }) {
  const awaitedParams = await Promise.resolve(params);
  const { locale } = awaitedParams;

  const { resources } = await initTranslations(locale, NAMESPACES);

  return (
    <html lang={locale}>
      <body
        suppressHydrationWarning={true}
        className={clsx(rubik.variable, raleway.variable, oswald.variable)}
      >
        <TranslationsProvider
          namespaces={NAMESPACES}
          locale={locale}
          resources={resources}
        >
          <ErrorBoundaryWithTranslation>
            <Header />

            <main>{children}</main>
          </ErrorBoundaryWithTranslation>
        </TranslationsProvider>
      </body>
    </html>
  );
}
