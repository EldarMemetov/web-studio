// import TranslationsProvider from "@/i18n/utils/TranslationsProvider";
// import { Header } from "../../modules/Header/Header";
// import "../globals.scss";
// import ErrorBoundaryWithTranslation from "@/shared/components/ErrorBoundary/ErrorBoundaryWithTranslation/ErrorBoundaryWithTranslation";
// import { Montserrat, Open_Sans } from "next/font/google";
// import clsx from "clsx";
// export const metadata = {
//   title: "web studio",
//   description: "Generated by create next app",
// };

// const montserrat = Montserrat({
//   subsets: ["latin", "cyrillic"],
//   weight: ["700"],
//   display: "swap",
//   variable: "--font-montserrat",
// });

// const open_sans = Open_Sans({
//   subsets: ["latin", "cyrillic"],
//   weight: ["400", "600"],
//   display: "swap",
//   variable: "--font-open_sans",
// });
// export default function Layout({ children, params: { locale } }) {
//   return (
//     <html lang={locale}>
//       <body className={clsx(montserrat.variable, open_sans.variable)}>
//         <TranslationsProvider locale={locale}>
//           <ErrorBoundaryWithTranslation>
//             <Header />
//             <main>{children}</main>
//           </ErrorBoundaryWithTranslation>
//         </TranslationsProvider>
//       </body>
//     </html>
//   );
// }
import TranslationsProvider from "@/i18n/utils/TranslationsProvider";
import { Header } from "../../modules/Header/Header";
import "../globals.scss";
import ErrorBoundaryWithTranslation from "@/shared/components/ErrorBoundary/ErrorBoundaryWithTranslation/ErrorBoundaryWithTranslation";
import { Montserrat, Open_Sans } from "next/font/google";
import clsx from "clsx";

export const metadata = {
  title: "web studio",
  description: "Generated by create next app",
};

const montserrat = Montserrat({
  subsets: ["latin", "cyrillic"],
  weight: ["700"],
  display: "swap",
  variable: "--font-montserrat",
});

const open_sans = Open_Sans({
  subsets: ["latin", "cyrillic"],
  weight: ["400", "600"],
  display: "swap",
  variable: "--font-open_sans",
});

export default async function Layout({ children, params }) {
  const awaitedParams = await Promise.resolve(params);
  const { locale } = awaitedParams;

  return (
    <html lang={locale}>
      <body
        suppressHydrationWarning={true}
        className={clsx(montserrat.variable, open_sans.variable)}
      >
        <TranslationsProvider locale={locale}>
          <ErrorBoundaryWithTranslation>
            <Header />
            <main>{children}</main>
          </ErrorBoundaryWithTranslation>
        </TranslationsProvider>
      </body>
    </html>
  );
}
